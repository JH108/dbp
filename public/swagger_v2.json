{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://api.dbp.dev/",
      "description": "Internal Staging server for testing"
    },
    {
      "url": "https://api.bible.build/",
      "description": "Online Staging server for testing"
    }
  ],
  "info": {
    "title": "Digital Bible Platform",
    "description": "An API for delivering Bible Content",
    "version": "2.0.0",
    "contact": {
      "name": "API Support",
      "url": "https://dbs.org/contact",
      "email": "jon@dbs.org"
    },
    "termsOfService": "https://bible.build/terms/",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Library",
      "description": "These routes retrieve all the information needed to build and retrieve audio information for each chapter/book/or volume."
    },
    {
      "name": "Audio",
      "description": "These routes retrieve all the information needed to build and retrieve audio information for each chapter/book/or volume."
    },
    {
      "name": "Text",
      "description": "These routes allow the caller to retrieve Bible text in a variety of configurations."
    },
    {
      "name": "Meta",
      "description": "These routes allow the caller to retrieve information about the API"
    }
  ],
  "paths": {
    "/api/apiversion": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          }
        ],
        "tags": [
          "Meta"
        ],
        "operationId": "v2_library_asset",
        "responses": {
          "200": {
            "description": "This route is the endpoint for the base URLs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionNumber"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VersionNumber"
                }
              }
            }
          }
        }
      }
    },
    "/library/asset": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "$ref": "#/components/parameters/dam_id"
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_asset",
        "responses": {
          "200": {
            "description": "This route is the endpoint for the base URLs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryAsset"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryAsset"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/library/language": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_volume",
        "responses": {
          "200": {
            "description": "This route is the endpoint for the base language model",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryLanguage"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryLanguage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/library/volume": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "name": "dam_id",
            "in": "query",
            "description": "the volume internal DAM ID. Can be used to restrict the response to only DAM IDs that contain with 'N2' for example",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fcbh_id",
            "in": "query",
            "description": "the volume FCBH DAM ID. Can be used to restrict the response to only FCBH DAM IDs that contain with 'N2' for example",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "media",
            "in": "query",
            "description": "The format of assets the caller is interested in. This specifies if you only want volumes available in text or volumes available in audio.",
            "schema": {
              "type": "string",
              "enum": [
                "text",
                "audio",
                "video"
              ]
            }
          },
          {
            "name": "delivery",
            "in": "query",
            "description": "A criteria for approved delivery method. It is possible to OR these methods together using '|', such as \"delivery=streaming_url|mobile\".  'any' means any of the supported methods (this list may change over time) i.e. approved for something. 'none' means volumes that are not approved for any of the supported methods. All volumes are returned by default.",
            "schema": {
              "type": "string",
              "enum": [
                "web",
                "web_streaming",
                "download",
                "download_text",
                "mobile",
                "sign_language",
                "streaming_url",
                "local_bundled",
                "podcast",
                "mp3_cd",
                "digital_download",
                "bible_stick",
                "subsplash",
                "any",
                "none"
              ]
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Filter the versions returned to a specified native or English language language name. For example return all the 'English' volumes.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "full_word",
            "in": "query",
            "description": "Consider the language name as being a full word. For instance, when false, 'new' will return volumes where the string 'new' is anywhere in the language name, like in \"Newari\" and \"Awa for Papua New Guinea\". When true, it will only return volumes where the language name contains the full word 'new', like in \"Awa for Papua New Guinea\". Default is false.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "language_code",
            "in": "query",
            "description": "the three letter language code.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language_family_code",
            "in": "query",
            "description": "the three letter language code for the language family.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated",
            "in": "query",
            "description": "YYYY-MM-DD. This is used to get volumes that were modified since the specified date.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Publishing status of volume. The default is 'live'.",
            "schema": {
              "type": "string",
              "enum": [
                "live",
                "disabled",
                "incomplete",
                "waiting_review",
                "in_review",
                "discontinued"
              ]
            }
          },
          {
            "name": "dbp_agreement",
            "in": "query",
            "description": "Whether or not a DBP Agreement has been executed between FCBH and the organization to whom the volume belongs.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "expired",
            "in": "query",
            "description": "Whether the volume as passed its expiration or not.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "Currently used for video volumes as they can be available in different resolutions, basically conforming to the loose general categories of low, medium, and high resolution. Low resolution is geared towards devices with smaller screens.",
            "schema": {
              "type": "string",
              "enum": [
                "lo",
                "med",
                "hi"
              ]
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organization id of volumes to return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Primary criteria by which to sort.  The default is 'dam_id'.",
            "schema": {
              "type": "string",
              "enum": [
                "dam_id",
                "volume_name",
                "language_name",
                "language_english",
                "language_family_code",
                "language_family_name",
                "version_code",
                "version_name",
                "version_english"
              ]
            }
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_volume",
        "responses": {
          "200": {
            "description": "This method retrieves the list of available volumes in the system according to the filter specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVolume"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVolume"
                }
              }
            }
          }
        }
      }
    },
    "/library/volumelanguagefamily": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_volumeLanguageFamily",
        "responses": {
          "200": {
            "description": "ToDO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVolumeLanguageFamily"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVolumeLanguageFamily"
                }
              }
            }
          }
        }
      }
    },
    "/library/volumeorganization": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "name": "root",
            "in": "query",
            "description": "the native language or English language language name root. Can be used to restrict the response to only languages that start with 'Quechua' for example",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "full_word",
            "in": "query",
            "description": "Consider the language name as being a full word. For instance, when false, 'new' will return volumes where the string 'new' is anywhere in the language name, like in \"Newari\" and \"Awa for Papua New Guinea\". When true, it will only return volumes where the language name contains the full word 'new', like in \"Awa for Papua New Guinea\". Default is false.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "language_code",
            "in": "query",
            "description": "the three letter language code.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "media",
            "in": "query",
            "description": "The format of the volumes of the language families the caller is interested in. This specifies if you want language families available in text, audio or video.",
            "schema": {
              "type": "string",
              "enum": [
                "text",
                "audio",
                "video"
              ]
            }
          },
          {
            "name": "delivery",
            "in": "query",
            "description": "A criteria for approved delivery method. It is possible to OR these methods together using '|', such as \"delivery=streaming|mobile\". 'any' means any of the supported methods (this list may change over time). 'none' means assets that are not approved for any of the supported methods. All returned by default.",
            "schema": {
              "type": "string",
              "enum": [
                "streaming",
                "web_streaming",
                "download",
                "download_text",
                "mobile",
                "sign_language",
                "local_bundled",
                "podcast",
                "mp3_cd",
                "digital_download",
                "bible_stick",
                "subsplash",
                "any",
                "none"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Publishing status of volume. The default is 'live'.",
            "schema": {
              "type": "string",
              "enum": [
                "live",
                "disabled",
                "incomplete",
                "waiting_review",
                "in_review",
                "discontinued"
              ]
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "Currently used for video volumes as they can be available in different resolutions, basically conforming to the loose general categories of low, medium, and high resolution. Low resolution is geared towards devices with smaller screens.",
            "schema": {
              "type": "string",
              "enum": [
                "lo",
                "med",
                "hi"
              ]
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "The id of an organization by which to filter the languages of available volumes.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_volume_organization_list",
        "responses": {
          "200": {
            "description": "This route returns a unique incrementing ID for each organization, the name of the organization and the number of volumes (AKA Bibles) the organization has contributed to the Koinos.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeOrganization"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeOrganization"
                }
              }
            }
          }
        }
      }
    },
    "/library/volumehistory": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_volume_history",
        "responses": {
          "200": {
            "description": "ToDO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVolumeHistory"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVolumeHistory"
                }
              }
            }
          }
        }
      }
    },
    "/library/bookorder": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "$ref": "#/components/parameters/dam_id"
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_bookorder",
        "responses": {
          "200": {
            "description": "ToDO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookOrder"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BookOrder"
                }
              }
            }
          }
        }
      }
    },
    "/library/book": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "$ref": "#/components/parameters/dam_id"
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_book",
        "responses": {
          "200": {
            "description": "Gets the book order and code listing for a volume.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookOrder"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BookOrder"
                }
              }
            }
          }
        }
      }
    },
    "/library/bookname": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "$ref": "#/components/parameters/dam_id"
          },
          {
            "name": "language_code",
            "in": "query",
            "description": "A three letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-3 standard](http://www-01.sil.org/iso639-3/default.asp).",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "[a-z]",
              "minLength": 3,
              "maxLength": 3
            }
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_bookname",
        "responses": {
          "200": {
            "description": "This call retrieves the native language book names for a DBP language code",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookName"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookName"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/library/chapter": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "$ref": "#/components/parameters/dam_id"
          },
          {
            "name": "book_id",
            "in": "query",
            "description": "The ID for the book for which to retrieve chapters",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_chapter",
        "responses": {
          "200": {
            "description": "Lists the chapters for a book or all books in a standard bible volume.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChapterListItem"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChapterListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/library/numbers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "name": "iso",
            "in": "query",
            "description": "The Iso Code of the language",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "The Starting Number of the range of numerals",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "The Ending Number of the range of numerals",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_numbers",
        "responses": {
          "200": {
            "description": "This route returns the vernacular numbers for a set range. The range for a single call is limited to 2000 numbers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Number"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Number"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/library/metadata": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "$ref": "#/components/parameters/dam_id"
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organization ID by which to filter",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_metadata",
        "responses": {
          "200": {
            "description": "This route returns information about the volume and it's associated organizations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryMetaData"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVolumeLanguageFamily"
                }
              }
            }
          }
        }
      }
    },
    "/library/organization": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The partial or complete name of the organization in either the organization's native language or English.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "the id of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "The enabled status of the organization",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_organization",
        "responses": {
          "200": {
            "description": "This route returns information about the volume and it's associated organizations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryOrganization"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LibraryOrganization"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/library/verseInfo": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "name": "dam_id",
            "description": "The DAM ID of the verse info.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "book_id",
            "description": "If specified returns verse text ONLY for the specified book.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chapter_id",
            "description": "If specified returns verse text ONLY for the specified book and chapter.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verse_start",
            "description": "If specified without 'verse_end' returns verse text ONLY for the specified book, chapter, and verse. If specified with 'verse_end' returns all verse text for the specified book, chapter, and verse range from 'verse_start' to 'verse_end'.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verse_end",
            "description": "If specified returns of all verse text for the specified book, chapter, and verse range from 'verse_start' to 'verse_end'. If specified requires that 'verse' is also specified.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Library"
        ],
        "operationId": "v2_library_verseInfo",
        "responses": {
          "200": {
            "description": "This route is the endpoint for the base URLs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVerseInfo"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVerseInfo"
                }
              }
            }
          }
        }
      }
    },
    "/audio/location": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "name": "protocol",
            "in": "query",
            "description": "Allows the caller to restrict potential servers from being returned that don't support a specified protocol.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "HTTP",
                "HTTPS",
                "RTMP"
              ]
            }
          }
        ],
        "tags": [
          "Audio"
        ],
        "operationId": "v2_audio_location",
        "responses": {
          "200": {
            "description": "ToDO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioLocation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AudioLocation"
                }
              }
            }
          }
        }
      }
    },
    "/audio/path": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "name": "dam_id",
            "description": "The DAM ID for which to retrieve file path info.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encoding",
            "description": "The audio encoding format desired.",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "mp3"
              ]
            }
          },
          {
            "name": "book_order",
            "description": "The order number of the book in the volume. This is particularly useful for story volumes as there are no applicable OSIS book codes.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "book_id",
            "description": "The OSIS id of the book. If book is not specified ALL book/chapter information for the given language is returned to the caller. Otherwise chapter information for the specified book is returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chapter_id",
            "description": "The id for the specified chapter. If chapter is specified only the specified chapter audio information is returned to the caller.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Audio"
        ],
        "operationId": "v2_audio_path",
        "responses": {
          "200": {
            "description": "This call returns the file path information for audio files for a volume. This information can be used with the response of the /audio/location call to create a URI to retrieve the audio files.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioPath"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AudioPath"
                }
              }
            }
          }
        }
      }
    },
    "/audio/versestart": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "name": "dam_id",
            "in": "query",
            "description": "The DAM ID of the audio volume",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "osis_code",
            "in": "query",
            "description": "The book for verse times desired.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "chapter_number",
            "in": "query",
            "description": "The chapter for the verse times desired",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Audio"
        ],
        "operationId": "v2_audio_timestamps",
        "responses": {
          "200": {
            "description": "ToDO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVolumeLanguageFamily"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVolumeLanguageFamily"
                }
              }
            }
          }
        }
      }
    },
    "/text/font": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "name": "id",
            "description": "The numeric ID of the font to retrieve",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Search for a specific font by name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "description": "Only return fonts that have been authorized for the specified platform.",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "android",
                "ios",
                "web",
                "all"
              ]
            }
          }
        ],
        "tags": [
          "Text"
        ],
        "operationId": "v2_text_font",
        "responses": {
          "200": {
            "description": "Some languages used by the Digital Bible Platform utilize character sets that are not supported by \"standard\" fonts. This call provides a list of custom fonts that have been made available.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryFont"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryFont"
                }
              }
            }
          }
        }
      }
    },
    "/text/verse": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/key"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/reply"
          },
          {
            "$ref": "#/components/parameters/callback"
          },
          {
            "$ref": "#/components/parameters/echo"
          },
          {
            "name": "dam_id",
            "description": "The DAM ID of the verse text",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "book_id",
            "description": "If specified returns verse text ONLY for the specified book.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chapter_id",
            "description": "If specified returns verse text ONLY for the specified book and chapter.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verse_start",
            "description": "If specified without 'verse_end' returns verse text ONLY for the specified book, chapter, and verse. If specified with 'verse_end' returns all verse text for the specified book, chapter, and verse range from 'verse_start' to 'verse_end'.",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "verse_end",
            "description": "If specified returns of all verse text for the specified book, chapter, and verse range from 'verse_start' to 'verse_end'. If specified requires that 'verse' is also specified.",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "markup",
            "description": "If specified returns the verse text in a variety of standardized markup formats. By default the internal DBT format is returned. Current options include OSIS, and native (the default DBT format).",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Text"
        ],
        "operationId": "v2_text_verse",
        "responses": {
          "200": {
            "description": "This method retrieves the bible verse text for the specified volume/book/chapter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextVerse"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextVerse"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "key": {
        "name": "key",
        "in": "query",
        "description": "The API key that's been generated for you.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "echo": {
        "name": "echo",
        "in": "query",
        "description": "If unused the results are as before. If set to true, the results will be prepended with the array of calling arguments used. This does mean that the results will be one layer deeper as the results will be an array where the first element is the array of input arguments and the second element will be the results as normally returned.",
        "schema": {
          "type": "string"
        }
      },
      "version": {
        "name": "key",
        "in": "query",
        "description": "The API key that's been generated for you.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "reply": {
        "name": "reply",
        "in": "query",
        "description": "Specifies the response type requested by the caller. Default is json.",
        "schema": {
          "type": "string",
          "enum": [
            "json",
            "html",
            "jsonp",
            "yaml",
            "xml"
          ]
        }
      },
      "callback": {
        "name": "callback",
        "in": "query",
        "description": "If unused the results are as before. If set to true, the results will be prepended with the array of calling arguments used. This does mean that the results will be one layer deeper as the results will be an array where the first element is the array of input arguments and the second element will be the results as normally returned.",
        "schema": {
          "type": "string"
        }
      },
      "dam_id": {
        "name": "dam_id",
        "in": "query",
        "description": "To get the location directory and asset file basename for a specific volume.",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "LanguageVolume": {
        "required": [
          "id",
          "name",
          "glotto_id",
          "iso"
        ],
        "properties": {
          "language_name": {
            "type": "string",
            "maxLength": 191,
            "example": "Shqip"
          },
          "english_name": {
            "type": "string",
            "maxLength": 191,
            "example": "Albanian"
          },
          "language_code": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 3,
            "maxLength": 3,
            "description": "This field is a legacy field from when it was possible for there to be a different language code than the iso code. Now it's just a duplicate of language_iso.",
            "example": "sqi"
          },
          "language_iso": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 3,
            "maxLength": 3,
            "description": "A three letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-3 standard](http://www-01.sil.org/iso639-3/default.asp). If the Iso Code Exists the Glotto Code is not required but may exist!",
            "example": "sqi"
          },
          "language_iso_2B": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 2,
            "maxLength": 2,
            "description": "The Bibliographic two letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-2B standard](https://www.loc.gov/standards/iso639-2/php/code_list.php).",
            "example": "sqi"
          },
          "language_iso_2T": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 2,
            "maxLength": 2,
            "description": "The Terminological two letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-2T standard](https://www.loc.gov/standards/iso639-2/php/code_list.php).",
            "example": "alb"
          },
          "language_iso_1": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "example": "sq"
          },
          "language_iso_name": {
            "type": "string",
            "maxLength": 191,
            "description": "Duplicate of language_name",
            "example": "Albanian"
          },
          "language_family_code": {
            "type": "string",
            "maxLength": 191,
            "example": "sqi"
          },
          "language_family_name": {
            "type": "string",
            "maxLength": 191
          },
          "language_family_english": {
            "type": "string",
            "maxLength": 191
          },
          "language_family_iso": {
            "type": "string",
            "maxLength": 191
          },
          "language_family_iso_2B": {
            "type": "string",
            "maxLength": 191
          },
          "language_family_iso_2T": {
            "type": "string",
            "maxLength": 191
          },
          "language_family_iso_1": {
            "type": "string",
            "maxLength": 191
          },
          "media_text": {
            "type": "string",
            "maxLength": 191
          },
          "delivery_mobile": {
            "type": "string",
            "maxLength": 191
          },
          "delivery_web": {
            "type": "string",
            "maxLength": 191
          },
          "delivery_subsplash": {
            "type": "string",
            "maxLength": 191
          },
          "resolution": {
            "type": "string",
            "maxLength": 191
          }
        }
      },
      "LibraryLanguage": {
        "required": [
          "id",
          "name",
          "glotto_id",
          "iso"
        ],
        "properties": {
          "language_code": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 3,
            "maxLength": 3,
            "description": "A three letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-3 standard](http://www-01.sil.org/iso639-3/default.asp). If the Iso Code Exists the Glotto Code is not required but may exist!",
            "example": "sqi"
          },
          "language_name": {
            "type": "string",
            "maxLength": 191,
            "example": "Shqip"
          },
          "english_name": {
            "type": "string",
            "maxLength": 191,
            "example": "Albanian"
          },
          "language_iso": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 3,
            "maxLength": 3,
            "description": "A three letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-3 standard](http://www-01.sil.org/iso639-3/default.asp). If the Iso Code Exists the Glotto Code is not required but may exist!",
            "example": "sqi"
          },
          "language_iso_2B": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 2,
            "maxLength": 2,
            "description": "The Bibliographic two letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-2B standard](https://www.loc.gov/standards/iso639-2/php/code_list.php).",
            "example": "sqi"
          },
          "language_iso_2T": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 2,
            "maxLength": 2,
            "description": "The Terminological two letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-2T standard](https://www.loc.gov/standards/iso639-2/php/code_list.php).",
            "example": "alb"
          },
          "language_iso_1": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "example": "sq"
          },
          "language_iso_name": {
            "type": "string",
            "maxLength": 191,
            "description": "Duplicate of language_name",
            "example": "Albanian"
          },
          "language_family_code": {
            "type": "string",
            "maxLength": 191,
            "example": "sqi"
          }
        }
      },
      "LibraryVolumeLanguageFamily": {
        "required": [
          "id"
        ],
        "properties": {
          "language_family_code": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 3,
            "maxLength": 3,
            "description": "A three letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-3 standard](http://www-01.sil.org/iso639-3/default.asp). If the Iso Code Exists the Glotto Code is not required but may exist!",
            "example": "aka"
          },
          "language_family_name": {
            "type": "string",
            "maxLength": 191,
            "example": null
          },
          "language_family_english": {
            "type": "string",
            "maxLength": 191,
            "example": "Akan"
          },
          "language_family_iso": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 3,
            "maxLength": 3,
            "description": "A three letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-3 standard](http://www-01.sil.org/iso639-3/default.asp). If the Iso Code Exists the Glotto Code is not required but may exist!",
            "example": "aka"
          },
          "language_family_iso_2B": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 2,
            "maxLength": 2,
            "description": "The Bibliographic two letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-2B standard](https://www.loc.gov/standards/iso639-2/php/code_list.php).",
            "example": "aka"
          },
          "language_family_iso_2T": {
            "type": "string",
            "pattern": "[a-z]",
            "minLength": 2,
            "maxLength": 2,
            "description": "The Terminological two letter identifier for the languages resources. This code matches up exactly with the codes from the [ISO 639-2T standard](https://www.loc.gov/standards/iso639-2/php/code_list.php).",
            "example": "aka"
          },
          "language_family_iso_1": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "example": "ak"
          },
          "language": {
            "type": "array",
            "description": "array of language codes of languages in family.",
            "example": [
              "fat",
              "twi"
            ]
          },
          "media": {
            "type": "array",
            "example": [
              "text",
              "audio"
            ]
          },
          "delivery": {
            "type": "string",
            "enum": [
              "streaming",
              "web_streaming",
              "download",
              "download_text",
              "mobile",
              "sign_language",
              "local_bundled",
              "podcast",
              "mp3_cd",
              "digital_download",
              "bible_stick",
              "subsplash",
              "any",
              "none"
            ]
          },
          "resolution": {
            "type": "string",
            "maxLength": 191
          }
        }
      },
      "Library": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 191,
            "example": "Coming Soon"
          }
        }
      },
      "VolumeOrganization": {
        "properties": {
          "organization_id": {
            "type": "integer",
            "description": "Incrementing ID for the organizations",
            "example": 1
          },
          "organization_name": {
            "type": "string",
            "description": "The Name of the Organization in English",
            "maxLength": 191,
            "example": "American Bible Society"
          },
          "number_volumes": {
            "type": "integer",
            "description": "The number of biblical resources the organization has contributed to Koinos",
            "example": 139
          }
        }
      },
      "LibraryVolume": {
        "properties": {
          "dam_id": {
            "type": "string",
            "description": "DAM ID of volume."
          },
          "fcbh_id": {
            "type": "string",
            "description": "the volume FCBH DAM ID."
          },
          "volume_name": {
            "type": "string",
            "description": "Name of volume."
          },
          "status": {
            "type": "string",
            "description": "Publishing status of volume.",
            "enum": [
              "live",
              "disabled",
              "incomplete",
              "waiting_review",
              "in_review",
              "discontinued"
            ]
          },
          "dbp_agreement": {
            "type": "boolean",
            "description": "Whether or not a DBP Agreement has been executed between FCBH and the organization to whom the volume belongs."
          },
          "expiration": {
            "type": "string",
            "description": "expiration date."
          },
          "language_code": {
            "type": "string",
            "description": "DBP language code"
          },
          "language_name": {
            "type": "string",
            "description": "native language name of the language of the volume."
          },
          "language_english": {
            "type": "string",
            "description": "English language name of the language of the volume."
          },
          "language_iso": {
            "type": "string",
            "description": "ISO 639-3 language code."
          },
          "language_iso_2B": {
            "type": "string",
            "description": "ISO 639-2B language code."
          },
          "language_iso_2T": {
            "type": "string",
            "description": "ISO 639-2T language code."
          },
          "language_iso_1": {
            "type": "string",
            "description": "ISO 639-1 language code."
          },
          "language_iso_name": {
            "type": "string",
            "description": "ISO  language name."
          },
          "language_family_code": {
            "type": "string",
            "description": "DBP language code of language family to which this language belongs."
          },
          "language_family_name": {
            "type": "string",
            "description": "native language name of language family to which this language belongs."
          },
          "language_family_english": {
            "type": "string",
            "description": "English language name of language family to which this language belongs."
          },
          "language_family_iso": {
            "type": "string",
            "description": "ISO 639-3 language code."
          },
          "language_family_iso_2B": {
            "type": "string",
            "description": "ISO 639-2B language code."
          },
          "language_family_iso_2T": {
            "type": "string",
            "description": "ISO 639-2T language code."
          },
          "language_family_iso_1": {
            "type": "string",
            "description": "ISO 639-1 language code."
          },
          "version_code": {
            "type": "string",
            "description": "Version of volume."
          },
          "updated_on": {
            "type": "string",
            "description": "Date and time of last update."
          },
          "right_to_left": {
            "type": "boolean",
            "description": "Indicating that the language is read right to left."
          },
          "num_art": {
            "type": "string",
            "description": "Number of art files for this volume."
          },
          "num_sample_audio": {
            "type": "string",
            "description": "Number of sample audio files for this volume."
          },
          "sku": {
            "type": "string",
            "description": "Legacy stocknumber, while supported."
          },
          "media": {
            "type": "string",
            "description": "media format (text, audio, video)"
          },
          "media_type": {
            "type": "string",
            "description": "The variety of the media, such as drama and non-drama."
          },
          "delivery": {
            "type": "string",
            "description": "array of delivery methods"
          },
          "resolution": {
            "type": "string",
            "description": "Array of resolutions available, if applicable."
          },
          "font": {
            "type": "string",
            "description": "If this volume has text that cannot be displayed properly using most standard fonts, a custom font will be assigned. This field can either be null (no font assigned), or a JSON object containing information about the font. For information about the structure of this JSON object, see the documentation for the /text/font call."
          }
        }
      },
      "LibraryVolumeHistory": {
        "properties": {
          "dam_id": {
            "description": "The volume for which the event occurred.",
            "type": "string",
            "example": "1BISLS"
          },
          "time": {
            "description": "The timestamp at which the event occurred.",
            "type": "string",
            "example": "2017-08-17 21:35:07"
          },
          "event": {
            "description": "The type of event.",
            "type": "string",
            "example": "Updated"
          }
        }
      },
      "BookOrder": {
        "properties": {
          "book_order": {
            "type": "integer",
            "description": "An integer to order the books by.",
            "example": 40
          },
          "book_id": {
            "type": "string",
            "description": "The OSIS book code for the book",
            "example": "Matt"
          },
          "book_name": {
            "type": "string",
            "description": "The Name of the book in the vernacular language of the bible text",
            "example": "Matthew"
          },
          "dam_id_root": {
            "type": "string",
            "description": "The identifying string for the Bible",
            "example": "ENGKJVN"
          }
        }
      },
      "BookName": {
        "properties": {
          "book_id": {
            "type": "string",
            "description": "The OSIS book code for the book",
            "example": "Matt"
          },
          "book_name": {
            "type": "string",
            "description": "The Name of the book in the vernacular language of the bible text",
            "example": "Matthew"
          }
        }
      },
      "ChapterListItem": {
        "properties": {
          "dam_id": {
            "type": "string",
            "example": "AAHWBT"
          },
          "book_id": {
            "type": "string",
            "example": "MAT"
          },
          "chapter_id": {
            "type": "string",
            "example": "1,"
          },
          "chapter_name": {
            "type": "string",
            "example": "Chapter 1"
          },
          "default": {
            "type": "string",
            "description": "A legacy value from the old system",
            "example": ""
          }
        }
      },
      "Number": {
        "properties": {
          "numeral": {
            "type": "integer",
            "example": 1
          },
          "numeral_vernacular": {
            "type": "string",
            "example": "١"
          }
        }
      },
      "LibraryFont": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "Abyssinica SIL"
          },
          "base_url": {
            "type": "string",
            "example": "http://cloud.faithcomesbyhearing.com/fonts/Abyssinica_SIL"
          },
          "files": {
            "type": "object",
            "properties": {
              "zip": {
                "type": "boolean"
              },
              "ttf": {
                "type": "boolean"
              }
            }
          },
          "platforms": {
            "type": "object",
            "properties": {
              "android": {
                "type": "boolean"
              },
              "ios": {
                "type": "boolean"
              },
              "web": {
                "type": "boolean"
              }
            }
          },
          "copyright": {
            "type": "string",
            "example": "© 2000-2013 SIL International"
          },
          "url": {
            "type": "string",
            "example": "http://bit.ly/1uKBBMx"
          }
        }
      },
      "LibraryMetaData": {
        "properties": {
          "dam_id": {
            "type": "string",
            "example": "1NGSLSS2DV"
          },
          "mark": {
            "type": "string",
            "example": "© DOOR International"
          },
          "volume_summary": {
            "type": "string"
          },
          "font_copyright": {
            "type": "string"
          },
          "font_url": {
            "type": "string"
          },
          "organization": {
            "type": "array",
            "$ref": "#/components/schemas/LibraryMetaDataOrganization"
          }
        }
      },
      "LibraryMetaDataOrganization": {
        "properties": {
          "organization_id": {
            "type": "string",
            "example": "1"
          },
          "organization": {
            "type": "string",
            "example": "Faith Comes By Hearing"
          },
          "organization_english": {
            "type": "string",
            "example": "Hosanna Ministries"
          },
          "organization_role": {
            "type": "string",
            "example": "holder"
          },
          "organization_url": {
            "type": "string",
            "example": "http://www.faithcomesbyhearing.com"
          },
          "organization_donation": {
            "type": "string",
            "example": "http://www.faithcomesbyhearing.com/donate"
          },
          "organization_address": {
            "type": "string",
            "example": null
          },
          "organization_address2": {
            "type": "string",
            "example": null
          },
          "organization_city": {
            "type": "string",
            "example": null
          },
          "organization_state": {
            "type": "string",
            "example": null
          },
          "organization_country": {
            "type": "string",
            "example": null
          },
          "organization_zip": {
            "type": "string",
            "example": null
          },
          "organization_phone": {
            "type": "string",
            "example": null
          }
        }
      },
      "AudioLocation": {
        "properties": {
          "dam_id": {
            "type": "string",
            "example": "AAHWBT"
          }
        }
      },
      "LibraryOrganization": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 225
          },
          "name": {
            "type": "string",
            "example": "© Nhóm Phiên Dịch Các Giờ Kinh Phụng Vụ giữ bản quyền reserved"
          },
          "english_name": {
            "type": "string",
            "example": "Translation Group Liturgy of the Hours, All rights reserved"
          },
          "description": {
            "type": "string",
            "example": null
          },
          "english_description": {
            "type": "string",
            "example": null
          },
          "web_url": {
            "type": "string",
            "example": null
          },
          "donation_url": {
            "type": "string",
            "example": null
          },
          "enabled": {
            "type": "string",
            "example": "true"
          },
          "address": {
            "type": "string",
            "example": null
          },
          "address2": {
            "type": "string",
            "example": null
          },
          "city": {
            "type": "string",
            "example": null
          },
          "state": {
            "type": "string",
            "example": null
          },
          "country": {
            "type": "string",
            "example": null
          },
          "zip": {
            "type": "string",
            "example": null
          },
          "phone": {
            "type": "string",
            "example": "nul"
          }
        }
      },
      "LibraryAsset": {
        "properties": {
          "server": {
            "type": "string",
            "example": "cloud.faithcomesbyhearing.com"
          },
          "root_path": {
            "type": "string",
            "example": "/mp3audiobibles2"
          },
          "protocol": {
            "type": "string",
            "example": "https"
          },
          "CDN": {
            "type": "integer",
            "example": 1
          },
          "priority": {
            "type": "integer",
            "example": 5
          },
          "volume_id": {
            "type": "string",
            "example": ""
          }
        }
      },
      "TextVerse": {
        "properties": {
          "book_name": {
            "type": "string",
            "maxLength": 191,
            "example": "Matthew"
          },
          "book_id": {
            "type": "string",
            "maxLength": 12,
            "example": "Matt"
          },
          "book_order": {
            "type": "integer",
            "example": 55
          },
          "chapter_id": {
            "type": "integer",
            "pattern": "[1-150]",
            "example": 1
          },
          "chapter_title": {
            "type": "string",
            "example": "Chapter 1"
          },
          "verse_id": {
            "type": "integer",
            "pattern": "[1-176]",
            "example": 1
          },
          "verse_text": {
            "type": "string",
            "example": "The book of the generation of Jesus Christ, the son of David, the son of Abraham."
          },
          "paragraph_number": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "TextFont": {
        "properties": {
          "id": {
            "description": "The numeric ID of the font",
            "type": "integer"
          },
          "name": {
            "description": "The name of the font",
            "type": "string"
          },
          "base_url": {
            "description": "The server directory that the font file(s) can be found in"
          },
          "files": {
            "description": "A JSON object representing the files available for the font. This JSON object is structured as follows",
            "type": "object"
          }
        }
      },
      "TextSearch": {
        "properties": {
          "dam_id": {
            "description": "DAM ID of the volume",
            "type": "string"
          },
          "book_name": {
            "description": "Book name.",
            "type": "string"
          },
          "book_id": {
            "description": "Book id.",
            "type": "string"
          },
          "book_order": {
            "description": "Order of book in volume.",
            "type": "string"
          },
          "chapter_id": {
            "description": "Chapter id.",
            "type": "string"
          },
          "verse_id": {
            "description": "Verse id.",
            "type": "string"
          },
          "verse_text": {
            "description": "The full text of the result returned.",
            "type": "string"
          }
        }
      },
      "TextSearchGroup": {
        "properties": {
          "dam_id": {
            "description": "DAM ID of the volume",
            "type": "string"
          },
          "book_name": {
            "description": "Book name.",
            "type": "string"
          },
          "book_id": {
            "description": "Book id.",
            "type": "string"
          },
          "book_order": {
            "description": "Order of book in volume.",
            "type": "string"
          },
          "results": {
            "description": "Number of results.",
            "type": "integer"
          }
        }
      },
      "VersionNumber": {
        "required": [
          "Version"
        ],
        "properties": {
          "Version": {
            "type": "string",
            "maxLength": 24,
            "example": "2.0.3"
          }
        }
      },
      "LibraryVerseInfo": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 64,
            "example": "ENGKJV_1_GEN_001_001"
          },
          "bible_id": {
            "type": "string",
            "maxLength": 24,
            "example": "ENGKJV"
          },
          "bible_variation_id": {
            "type": "string",
            "maxLength": 24,
            "example": "ENGKJV1611"
          },
          "book_id": {
            "type": "string",
            "maxLength": 3,
            "example": "GEN"
          },
          "chapter_number": {
            "type": "integer",
            "minLength": 1,
            "maxLength": 150,
            "example": 1
          },
          "verse_start": {
            "type": "integer",
            "maxLength": 178,
            "minLength": 1,
            "example": 1
          },
          "verse_end": {
            "type": "integer",
            "maxLength": 178,
            "minLength": 1,
            "example": 1
          },
          "verse_text": {
            "type": "string",
            "example": "In the beginning God created the heaven and the earth."
          }
        }
      },
      "AudioPath": {
        "properties": {
          "book_id": {
            "description": "unique ID for the associated book for this chapter",
            "example": "GEN",
            "type": "string"
          },
          "chapter_id": {
            "description": "The id of the chapter",
            "type": "integer",
            "example": 1
          },
          "path": {
            "description": "relative file path for the audio",
            "type": "string",
            "example": "o2esv/A01_06_Genesis_O2ESV.mp3"
          }
        }
      },
      "AudioTimestamp": {
        "properties": {
          "verse_id": {
            "description": "id of verse"
          },
          "verse_start": {
            "description": "time start in seconds of the verse"
          }
        }
      },
      "VideoLocation": {
        "properties": {
          "protocol": {
            "description": "HTTP, HTTPS",
            "type": "string"
          },
          "server": {
            "description": "Example video.dbt.io",
            "type": "string"
          }
        }
      },
      "CountryLang": {
        "properties": {
          "id": {
            "description": "Numerical country id",
            "type": "integer"
          },
          "lang_code": {
            "description": "Language code of associated country",
            "type": "string"
          },
          "region": {
            "description": "Country Region",
            "type": "string"
          },
          "country_primary": {
            "description": "ISO country code",
            "type": "string"
          },
          "country_image": {
            "description": "Link to country flag image of requested size",
            "type": "string"
          },
          "country_additional": {
            "description": "Colon separated list of optional countries",
            "type": "string"
          },
          "iso_language_code": {
            "description": "ISO language code",
            "type": "string"
          },
          "regional_lang_name": {
            "description": "Regional Language Name",
            "type": "string"
          },
          "family_id": {
            "description": "Language Family ID",
            "type": "string"
          },
          "primary_country_name": {
            "description": "Full name of country",
            "type": "string"
          }
        }
      }
    }
  }
}