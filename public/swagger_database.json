{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://api.bible.build/",
      "description": "Online Staging server for testing"
    },
    {
      "url": "https://api.dbp.dev/",
      "description": "Internal Staging server for testing"
    }
  ],
  "info": {
    "title": "Digital Bible Database",
    "description": "The 4th interation of the dbp",
    "version": "4.0.0",
    "contact": {
      "name": "API Support",
      "url": "https://dbs.org/contact",
      "email": "jon@dbs.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/no-routes": {
      "get": {
        "summary": "No routes exist for database docs",
        "responses": {
          "200": {
            "description": "No routes exist for database docs"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "database_alphabet": {
        "required": [
          "name",
          "script"
        ],
        "properties": {
          "script": {
            "$ref": "#/components/schemas/field_script_id"
          },
          "name": {
            "type": "string",
            "description": "The Name of the Alphabet in English",
            "maxLength": 191,
            "example": "Adlm"
          },
          "unicode_pdf": {
            "type": "string",
            "description": "The Url to a reference unicode PDF source document.",
            "example": "https://unicode.org/charts/PDF/U0980.pdf"
          },
          "family": {
            "type": "string",
            "example": "African",
            "description": "The script family of the font"
          },
          "type": {
            "type": "string",
            "example": "alphabet",
            "description": "The catagorization for the script: Alphabet, Syllabary, Featural, ect.",
            "enum": [
              "alphabet",
              "syllabary",
              "abugida",
              "abjad",
              "logo-syllabary",
              "featural",
              "unspecified"
            ]
          },
          "white_space": {
            "type": "string",
            "example": "The type of negative space between the letters or glyphs",
            "enum": [
              "between words",
              "discretionary",
              "none",
              "unspecified",
              "between phrases"
            ]
          },
          "open_type_tag": {
            "type": "string",
            "description": "Script tags identify the scripts represented in an OpenType typeface. Each tag corresponds to contiguous character code ranges in Unicode. A script tag can consist of 4 or fewer lowercase letters",
            "example": "cyrl"
          },
          "complex_positioning": {
            "type": "boolean",
            "description": "If true, this script's letters may vary their positions depending on the letters around them. For example, a single Thai letter can have multiple diacritics attached to it, which need to stack on top of one another. All but the bottom in the stack are therefore in a higher position than they would be otherwise. Similarly, diacritics which attach above letters of different heights will be in different positions."
          },
          "requires_font": {
            "type": "boolean",
            "description": "If true, this script generally requires a font to display correctly online",
            "example": true
          },
          "unicode": {
            "type": "boolean",
            "example": true
          },
          "diacritics": {
            "type": "boolean",
            "description": "If true, this script contains diacritics. Diacritics are ancillary glyphs which are added to a base letter. These tend to be smaller than letters, and are never written independently of a base letter.",
            "example": true
          },
          "contextual_forms": {
            "type": "boolean",
            "description": "If true, this script contains letters which change shape in some contexts"
          },
          "reordering": {
            "type": "boolean",
            "description": "If true, this Script requires reordering. Reordered scripts are sometimes written in such a way that the written order of the letters does not match the spoken order. That is, in a left-to-right script, there are some letters which are written to the left of the letter they follow in speech, rather than to the right. Note that reordering is sometimes not reflected in software implementations, as is the case with the Lao, Thai and Tai Viet scripts."
          },
          "case": {
            "type": "boolean",
            "description": "If true, this script is bicameral. In bicameral scripts very or nearly every letter has two forms, an upper case (also called capital or majescule) and a lower case (also called miniscule)."
          },
          "split_graphs": {
            "type": "boolean",
            "description": "If true, this script contains split graphs. A split graph is a single character written using two separate, distinct elements. For example, the Bengali letter o is written with one stroke to the left and one to the right of the consonant it follows."
          },
          "status": {
            "type": "string",
            "description": "There are four script status catagorizations. Current scripts are in use today, including artificial and liturgical scripts. Historical  scripts once had a viable, primary community of users, but no longer do. Fictional scripts are invented by writers and artists for fictional communities. Finally, unclear scripts have a status which is unclear.",
            "enum": [
              "Current",
              "Historical",
              "Fictional",
              "Unclear"
            ]
          },
          "baseline": {
            "type": "string",
            "description": "* __Hanging:__ A script in which the letters predominantly align at the top and sit below the baseline, rather than on it. Such scripts may contain some letters which extend above the baseline. Scripts with a hanging baseline are always written horizontally, and tend to read from left to right. Some examples are _Tibetan, Devanagari, Beria_\n* __Centered:__ A script in which the point of alignment runs through the center of each letter. Both vertical and horizontal scripts may have a centered baseline.  _Han_ is an example of this.\n* __Bottom:__ A script in which the letters predominantly sit upon the baseline. Such scripts may contain some letters which descend below the baseline. Scripts with a bottom baseline are always written horizontally.  _Latin_ and _Thai_ are two examples of this.\n* __Vertical:__ A script which is written vertically; these tend to be written in columns from top to bottom. They also tend to be centered, but there are exceptions to this, such as Mongolian, which is written in vertical columns but with the point of alignment running to the right of the centre of each letter.\n",
            "enum": [
              "Hanging",
              "Centered",
              "Bottom",
              "Vertical"
            ]
          },
          "ligatures": {
            "type": "string",
            "description": "* __Required:__  In these scripts ligatures, single glyphs composed of more than one symbol, are required in order to properly process a piece of text. That is, there are certain combinations of letters which can only be written using a ligature. Cursive scripts generally require ligatures. Some examples are _Arabic_ or _Tibetan_.\n* __Optional:__  In these scripts, combinations of letters may either be written as separate glyphs or as a ligature. For example, the a+e combination in English written in the Latin script can either be written with two distinct letters or with the Ã¦ ligature. A few examples are _Latin_ or _Georgian_.\n* __None:__  In these scripts, every letter must be written distinctly; it is not possible to join letters to produce a ligature. A few examples are _Mayan Hieroglyphs_ or _Miao_.\n"
          },
          "direction": {
            "type": "string",
            "example": "rtl",
            "description": "The direction of the text of the script"
          },
          "direction_notes": {
            "type": "string",
            "description": "Any additional information regarding the direction of the text."
          },
          "sample": {
            "type": "string",
            "description": "A selection of text in the script being described. Usually a poriton of the Bible from Genesis 1 or John 3"
          },
          "sample_img": {
            "type": "string",
            "description": "The name of a saved image of the sample text used to confirm that the text is rendering correctly.",
            "example": "Latn.png"
          },
          "description": {
            "type": "string",
            "description": "The history of the script and it's notable features."
          }
        }
      },
      "database_alphabet_fonts": {
        "required": [
          "name",
          "script"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Auto incrementing integer field to serve as an arbitrary ID",
            "readOnly": true,
            "minimum": 1,
            "example": 25
          },
          "script_id": {
            "$ref": "#/components/schemas/field_script_id"
          },
          "fontName": {
            "type": "string",
            "description": "The name of the Font",
            "example": "Times New Roman"
          },
          "fontFileName": {
            "type": "string",
            "description": "The File name of the Font",
            "example": "TimesNewRoman.ttf"
          },
          "fontWeight": {
            "type": "integer",
            "minimum": 100,
            "maximum": 900,
            "description": "The font-weight property specifies the weight (or boldness) of the font.",
            "example": 200
          },
          "copyright": {
            "type": "string",
            "example": "",
            "description": "The copyright for the font"
          },
          "url": {
            "type": "string",
            "example": "",
            "description": "The url for the font"
          },
          "notes": {
            "type": "string",
            "example": "",
            "description": "A brief description of the font"
          },
          "italic": {
            "type": "boolean",
            "description": "If true, the font is an italic"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_alphabet_language": {
        "required": [
          "id",
          "script_id",
          "language_id"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "script_id": {
            "$ref": "#/components/schemas/field_script_id"
          },
          "language_id": {
            "$ref": "#/components/schemas/field_incrementing_language_id"
          }
        }
      },
      "database_alphabet_numbers": {
        "required": [
          "id",
          "script_id",
          "numeral",
          "numeral_vernacular"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "script_id": {
            "$ref": "#/components/schemas/field_script_id"
          },
          "script_variant_iso": {
            "$ref": "#/components/schemas/iso_code"
          },
          "numeral": {
            "type": "integer",
            "minimum": 0,
            "description": "The number being referenced",
            "example": 6
          },
          "numeral_vernacular": {
            "type": "string",
            "description": "The number in the writing system",
            "example": "á¦"
          },
          "numeral_written": {
            "type": "string",
            "description": "The word for the number or a more formal way of writing it.",
            "example": "áááá¶ááá½á"
          }
        }
      },
      "database_bibles": {
        "required": [
          "id",
          "iso",
          "script"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "iso": {
            "$ref": "#/components/schemas/iso_code"
          },
          "date": {
            "$ref": "#/components/schemas/date"
          },
          "scope": {
            "$ref": "#/components/schemas/field_size_code"
          },
          "script": {
            "$ref": "#/components/schemas/field_script_id"
          },
          "derived": {
            "type": "string",
            "description": "Determines the ancestory of the current text. For example: the ENGWEB would be derived from ENGESV since the World English Bible is a derivitive of the English Standard Version.",
            "example": "ENGESV"
          },
          "copyright": {
            "type": "string",
            "description": "The original publication copyright of the scripture",
            "example": "Â© Wycliffe Bible Translators 1998"
          },
          "in_progress": {
            "type": "boolean",
            "description": "If true, this field indicates that the translators are still working on translating these scriptures",
            "example": true
          },
          "open_access": {
            "type": "boolean",
            "description": "If true, this field indicates that the copyright of the Bible is open enough to allow access by default to API users",
            "example": true
          },
          "priority": {
            "type": "integer",
            "description": "The order in which Bibles are returned via the API",
            "example": "NT"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_bible_translator": {
        "description": "A pivot table to connect the Bibles and Translators",
        "required": [
          "id",
          "translator_id"
        ],
        "properties": {
          "bible_id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "translator_id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          }
        }
      },
      "database_bible_translations": {
        "description": "The Titles for the Bibles Translated into various Languages",
        "required": [
          "id",
          "translator_id"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "iso": {
            "$ref": "#/components/schemas/iso_code"
          },
          "bible_id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "vernacular": {
            "type": "boolean",
            "description": "Whether this particular Translation is the title of the Bible"
          },
          "name": {
            "type": "string",
            "description": "The translated name of the Bible",
            "example": "Tur Gewasin O Baibasit Boubun"
          },
          "description": {
            "type": "string",
            "description": "The translated description for a Bible",
            "example": "Tok Orait Dispela Buk Baibel i kam wantaim tok orait na lo bilong Creative Commons Attribution-Noncommercial-No Derivative Works license. Em i tok olsem yu ken givim kopi long narepela manmeri. Yu ken wokim kopi na givim long husat i laikim."
          },
          "type": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "notes": {
            "type": "string",
            "example": "",
            "description": "Optional Administrative notes about a particular Translation"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_bible_organizations": {
        "description": "A pivot table to connect the Bibles and Organizations",
        "required": [
          "id",
          "translator_id"
        ],
        "properties": {
          "bible_id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "organization_id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "relationship_type": {
            "type": "string",
            "description": "The type of relationship between the bible and the organization.",
            "example": "publisher"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_bible_links": {
        "description": "External Links to examples of this Bible",
        "required": [
          "id",
          "bible_id",
          "url",
          "title"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "bible_id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "type": {
            "type": "string",
            "description": "The destination type of the link",
            "example": "PDF"
          },
          "url": {
            "type": "string",
            "description": "The url of the link",
            "example": "http://amzn.to/1CPXlji"
          },
          "title": {
            "type": "string",
            "description": "The title of the link",
            "example": "Yoruba-English Bilingual Bible"
          },
          "provided": {
            "type": "string",
            "description": "The provider of the link",
            "example": "Logos"
          },
          "organization_id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_bible_filesets": {
        "description": "Different Sets of files for a scripture resource",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "An arbitrary string representation for the fileset",
            "example": "ACAWBTP2ET"
          },
          "hash_id": {
            "$ref": "#/components/schemas/field_fileset_hash_id"
          },
          "bucket_id": {
            "type": "string",
            "description": "The name of the AWS S3 Bucket",
            "example": "dbp_dev"
          },
          "set_type_code": {
            "type": "string",
            "description": "The type of fileset being delivered audio, text, ect."
          },
          "set_size_code": {
            "$ref": "#/components/schemas/field_size_code"
          },
          "hidden": {
            "type": "boolean",
            "description": "If the fileset should be visable in the API"
          }
        }
      },
      "database_bible_fileset_types": {
        "description": "Different Types for the BibleFile Sets",
        "required": [
          "id",
          "set_type_code",
          "name"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "set_type_code": {
            "type": "string",
            "description": "The code for the set type",
            "example": "audio_drama"
          },
          "name": {
            "type": "string",
            "description": "The name of the set Type",
            "example": "Dramatized Audio"
          }
        }
      },
      "database_bible_fileset_tags": {
        "description": "Different Tags for the BibleFile Sets",
        "required": [
          "hash_id",
          "name",
          "description"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "hash_id": {
            "$ref": "#/components/schemas/field_fileset_hash_id"
          },
          "name": {
            "type": "string",
            "example": "The name of the fileset tag"
          },
          "description": {
            "type": "string",
            "example": "The description of the fileset tag"
          },
          "admin_only": {
            "type": "boolean",
            "description": "If true, the tag will not return to users via the API."
          },
          "notes": {
            "type": "string",
            "description": "Notes for the use of the archivist"
          },
          "iso": {
            "$ref": "#/components/schemas/iso_code"
          }
        }
      },
      "database_bible_fileset_sizes": {
        "description": "Different Scopes of scripture for the BibleFile Sets. From the New Testament with portions to a full Bible with apocrypha. This table should describe them all.",
        "required": [
          "hash_id",
          "name"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "set_size_code": {
            "type": "string",
            "description": "The code for the set size"
          },
          "name": {
            "type": "string",
            "description": "The name for the set size"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_bible_fileset_relations": {
        "description": "Handles relationships between different filesets. For example: a relationship of `based_on` might exist between an audio bible and the text that corresponds to it.",
        "required": [
          "id",
          "parent_hash_id",
          "child_hash_id",
          "relationship"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "parent_hash_id": {
            "type": "string",
            "description": "Hash ID of the parent fileset"
          },
          "child_hash_id": {
            "type": "string",
            "description": "Hash ID of the child fileset"
          },
          "relationship": {
            "type": "string",
            "description": "The relationship between the two filesets"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_bible_fileset_connections": {
        "description": "Connections serves as a pivot table between `bibles` and `bible_filesets`",
        "required": [
          "bible_id",
          "hash_id"
        ],
        "properties": {
          "hash_id": {
            "$ref": "#/components/schemas/field_fileset_hash_id"
          },
          "bible_id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_bible_files": {
        "description": "The table containing references to all of the scripture files in s3",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "book_id": {
            "$ref": "#/components/schemas/book_id_usfm"
          },
          "chapter_start": {
            "type": "integer",
            "description": "The integer value for the chapter of the reference. For example: the chapter_start value of `John 1-2:1-10;3-5` would be `1`. Like the verse_start and verse_end values there are two chapter values as files  may span chapters.",
            "example": 2,
            "minimum": 1,
            "maximum": 150
          },
          "chapter_end": {
            "type": "integer",
            "description": "The integer value for the chapter of the reference. For example: the chapter_end value of `John 1-2:1-10;3-5` would be `2`. Like the verse_start and verse_end values there are two chapter values as files  may span chapters.",
            "example": 2,
            "minimum": 1,
            "maximum": 150
          },
          "verse_start": {
            "$ref": "#/components/schemas/verse_start"
          },
          "verse_end": {
            "$ref": "#/components/schemas/verse_end"
          },
          "file_name": {
            "type": "string",
            "description": "The name of the file stored in s3."
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_bible_file_titles": {
        "description": "The table containing the titles for each file stored in s3",
        "required": [
          "id",
          "iso",
          "title"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "iso": {
            "$ref": "#/components/schemas/iso_code"
          },
          "file_name": {
            "type": "string",
            "description": "The name of the file stored in s3."
          },
          "title": {
            "type": "string",
            "description": "The title of the file stored in s3."
          },
          "description": {
            "type": "string",
            "description": "The description of the file stored in s3."
          },
          "key_words": {
            "type": "string",
            "description": "Key words for the file stored in s3."
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_bible_file_timestamps": {
        "description": "The table containing the titles for each file stored in s3",
        "required": [
          "id",
          "iso",
          "title"
        ],
        "properties": {
          "file_id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "iso": {
            "$ref": "#/components/schemas/iso_code"
          },
          "verse_start": {
            "$ref": "#/components/schemas/verse_start"
          },
          "verse_end": {
            "$ref": "#/components/schemas/verse_end"
          },
          "timestamp": {
            "type": "integer",
            "description": "The position in time that is being described."
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_bible_equivalents": {
        "description": "The table containing external equivalents for the bible ids.",
        "required": [
          "id"
        ],
        "properties": {
          "bible_id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "equivalent_id": {
            "type": "string"
          },
          "organization_id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "type": {
            "type": "string",
            "description": "The type of destination for the equivalent relationship"
          },
          "site": {
            "type": "string",
            "description": "The site that the foreign equivalent exists on"
          },
          "suffix": {
            "type": "string",
            "description": "A small descriptive title for the equivalent relationship"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_bible_books": {
        "description": "The table describing the connection between the books and bibles tables",
        "required": [
          "bible_id",
          "book_id",
          "name"
        ],
        "properties": {
          "bible_id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "book_id": {
            "$ref": "#/components/schemas/book_id_usfm"
          },
          "name": {
            "type": "string",
            "description": "The full name of the Biblical book"
          },
          "name_short": {
            "type": "string",
            "description": "The short name of the Biblical book"
          },
          "chapters": {
            "type": "string",
            "description": "The number of chapters for the Biblical book"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_book_translations": {
        "description": "This table serves as a fallback for the bible specific translations located in the table `bible_books`",
        "required": [
          "iso",
          "book_id",
          "name"
        ],
        "properties": {
          "bible_id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "book_id": {
            "$ref": "#/components/schemas/book_id_usfm"
          },
          "name": {
            "type": "string",
            "description": "The full name of the Biblical book"
          },
          "name_short": {
            "type": "string",
            "description": "The short name of the Biblical book"
          },
          "chapters": {
            "type": "string",
            "description": "The number of chapters for the Biblical book"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_book": {
        "description": "This table serves as a fallback for the bible specific translations located in the table `bible_books`",
        "required": [
          "iso",
          "book_id",
          "name"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/book_id_usfm"
          },
          "id_usfx": {
            "$ref": "#/components/schemas/book_id_usfx"
          },
          "id_osis": {
            "$ref": "#/components/schemas/book_id_osis"
          },
          "book_order": {
            "type": "integer",
            "description": "The order of the books of the bible"
          },
          "testament_order": {
            "type": "string",
            "description": "The order of the books of the bible relative to the specific testament that contains them"
          },
          "book_testament": {
            "type": "string",
            "description": "A short string indicating the testament that the book falls within.",
            "minLength": 2,
            "maxLength": 2,
            "enum": [
              "OT",
              "NT",
              "AP"
            ]
          },
          "book_group": {
            "type": "string",
            "description": "The name of the group that encompasses this book",
            "example": "Pauline Epistles"
          },
          "chapters": {
            "type": "integer",
            "description": "The number of chapters in this book"
          },
          "verses": {
            "type": "integer",
            "description": "The number of verses in this book"
          },
          "name": {
            "type": "string",
            "description": "The name of this book in English"
          },
          "notes": {
            "type": "string",
            "description": "Any archivist notes regarding this book"
          },
          "description": {
            "type": "string",
            "description": "The description of this book"
          }
        }
      },
      "database_buckets": {
        "description": "The available AWS s3 buckets for the API and the organizations connected to them",
        "required": [
          "id",
          "organization_id",
          "hidden"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The name of the s3 amazon bucket that contains the organizations content"
          },
          "organization_id": {
            "type": "integer",
            "description": "An integer ID representing the organization id located on the `organizations` table.",
            "example": 22
          },
          "hidden": {
            "type": "boolean",
            "description": "Simple mechanical field that determines on whether or not a bucket is visable to the API users"
          }
        }
      },
      "database_countries": {
        "properties": {
          "id": {
            "type": "string",
            "description": "These are the ISO 3166-1 alpha-2 country codes",
            "minLength": 2,
            "maxLength": 2
          },
          "iso_a3": {
            "type": "string",
            "description": "These are the ISO 3166-1 alpha-3 country codes",
            "minLength": 3,
            "maxLength": 3
          },
          "fips": {
            "type": "string",
            "description": "These are the FIPS country codes: The two-letter country codes were used by the US government for geographical data processing in many publications, such as the CIA World Factbook.",
            "minLength": 2,
            "maxLength": 2
          },
          "continent": {
            "type": "string",
            "description": "The two letter USGS continent codes",
            "minLength": 2,
            "maxLength": 2
          },
          "name": {
            "type": "string",
            "description": "The name of the country"
          },
          "introduction": {
            "type": "string",
            "description": "A brief summary of the country"
          }
        }
      },
      "database_language_altNames": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "language_id": {
            "$ref": "#/components/schemas/field_incrementing_language_id"
          },
          "name": {
            "type": "string",
            "description": "The alternative name to the language"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_language_bibleInfo": {
        "description": "Basic Biblical publication information for a specific language",
        "properties": {
          "bible_status": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4,
            "example": 3,
            "description": "- __0__  - Questionable translation need\n- __1__  - No Bible definite translation need\n- __2__  - Portions have been translated\n- __3__  - A complete New Testament exists\n- __4__  - A complete Bible exists\n"
          },
          "bible_year": {
            "type": "integer",
            "description": "The year of Biblical publication"
          },
          "bible_year_newTestament": {
            "type": "string",
            "description": "The year of New Testament Publication"
          },
          "bible_year_portions": {
            "type": "string",
            "description": "The year of biblical portion publication"
          },
          "bible_sample_text": {
            "type": "string",
            "description": "The year of sample days"
          },
          "bible_sample_img": {
            "type": "string",
            "description": "The name of the sample image for the text."
          }
        }
      },
      "database_language_classifications": {
        "required": [
          "id",
          "language_id",
          "name"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "language_id": {
            "$ref": "#/components/schemas/field_incrementing_language_id"
          },
          "classification_id": {
            "type": "string",
            "description": "The id of the classification"
          },
          "order": {
            "type": "string",
            "description": "The sequence of classification from less specific to more specific"
          },
          "name": {
            "type": "string",
            "description": "The name of the classification"
          }
        }
      },
      "database_language_codes": {
        "required": [
          "id",
          "language_id"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "language_id": {
            "$ref": "#/components/schemas/field_incrementing_language_id"
          },
          "source": {
            "type": "string",
            "example": "Iso 639-2",
            "description": "The source of the foreign language code"
          },
          "code": {
            "type": "string",
            "description": "The foreign language code itself.",
            "example": "aa"
          }
        }
      },
      "database_language_dialects": {
        "required": [
          "language_id",
          "dialect_id",
          "name"
        ],
        "properties": {
          "language_id": {
            "$ref": "#/components/schemas/field_incrementing_language_id"
          },
          "dialect_id": {
            "type": "integer",
            "description": "Integer field to serve as an ID for the Language's dialects"
          },
          "name": {
            "type": "string",
            "description": "The name of the dialect",
            "example": "Eastern Egyptian Bedawi Arabic"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_language_translations": {
        "required": [
          "language_source",
          "language_translation",
          "name"
        ],
        "properties": {
          "language_source": {
            "type": "string",
            "description": "The language being description"
          },
          "language_translation": {
            "type": "string",
            "description": "The language of the translation"
          },
          "name": {
            "type": "string",
            "description": "The name of the language translated in the language referenced via the `language_translation` field."
          },
          "description": {
            "type": "string",
            "description": "The description of the language"
          },
          "vernacular": {
            "type": "boolean",
            "description": "Will be true if the language name is a autonym"
          }
        }
      },
      "database_languages": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_language_id"
          },
          "glotto_id": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8,
            "description": "The Glottogue code"
          },
          "iso": {
            "$ref": "#/components/schemas/iso_code"
          },
          "iso2B": {
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "description": "The three letter Iso 639-3b code."
          },
          "iso2T": {
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "description": "The three letter Iso 639-3t code."
          },
          "iso1": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "description": "The two letter Iso 639-2 code."
          },
          "name": {
            "type": "string",
            "description": "The name of the language."
          },
          "autonym": {
            "type": "string",
            "description": "Autonym refers to what people call their language."
          },
          "maps": {
            "type": "string",
            "description": ""
          },
          "development": {
            "type": "string",
            "description": "The language's literacy, health and growth."
          },
          "use": {
            "type": "string",
            "description": "The language's utlization. If it's used as a trade language, it's use in the home, ect."
          },
          "location": {
            "type": "string",
            "description": "A general description of the location around which the language is commonly spoken"
          },
          "area": {
            "type": "string",
            "description": "The region of the world where the language can most often be found."
          },
          "population": {
            "type": "integer",
            "description": "The number of speakers, native or otherwise"
          },
          "population_notes": {
            "type": "string",
            "description": "Additional clerical information regarding the `population` field. Is often a source for the data or a cautionary note as to it's accuracy."
          },
          "notes": {
            "type": "string",
            "description": "Additional clerical information regarding the langauge being described. This is distinct from the `description` field in that it is not public and will not be returned by the API."
          },
          "typology": {
            "type": "string",
            "description": "Specific features of the language being described: Nasalization on syllable, tonal, ect."
          },
          "writing": {
            "type": "string",
            "description": "The writing system(s) commonly used by this langauge."
          },
          "description": {
            "type": "string",
            "description": "A general description for the langauge being described. This is distinct from the `notes` field in that it is public and will be returned by the API."
          },
          "latitude": {
            "type": "integer",
            "description": "Am estimated center latitude for the area within which the language is commonly spoken"
          },
          "longitude": {
            "type": "integer",
            "description": "Am estimated center longitude for the area within which the language is commonly spoken"
          },
          "status": {
            "type": "string",
            "description": "The current status of the language's health. On a scale from 1 to 10. 1 being the 'healthiest' a language can be and 10 being extinct.\n- 1 National\n- 2 Provincial\n- 3 Wider communication\n- 4 Educational\n- 5 Developing\n- 6a Vigorous\n- 6b Threatened\n- 7 Shifting\n- 8a Moribund\n- 8b Nearly extinct\n- 8b Reintroduced\n- 9 Dormant\n- 10 Extinct\n"
          },
          "country_id": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "description": "The `primary` country id for a language. Where the language is generally spoken"
          }
        }
      },
      "database_organization_logos": {
        "properties": {
          "organization_id": {
            "type": "string"
          },
          "language_iso": {
            "$ref": "#/components/schemas/iso_code"
          },
          "url": {
            "type": "string",
            "description": "The filepath to the location where this is being stored."
          },
          "icon": {
            "type": "boolean",
            "description": "If true, indicates that the logo being described is sutable for use as an icon."
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_organization_relationships": {
        "description": "This table details the different relationships between organizations of the Digital Bible Platform and external organizations and societies. For example, Many relationships between member organizations of the Digital Bible Platform and Member Organizations of the Digital Bible Library exist and are catalogued in this table.",
        "required": [
          "organization_parent_id",
          "organization_child_id",
          "type",
          "relationship_id"
        ],
        "properties": {
          "organization_parent_id": {
            "type": "integer",
            "description": "The foreign key pointing to the `id` field on the organizations table. This is the parent or originating organization in the relationship. For example: if the relationship `(Faith Comes By Hearing)` is a member of the `(Forum of Bible Agencies International)`. This field would be the id of the Forum of Bible agencies",
            "example": 245
          },
          "organization_child_id": {
            "type": "integer",
            "description": "This also points to the id field on the organizations table. This organization is the child or recieveing organization in the relationship. For example: if the relationship `(Faith Comes By Hearing)` is a member of the `(Forum of Bible Agencies International)`. This field would be the id of the Faith Comes By Hearing"
          },
          "type": {
            "type": "string",
            "description": "The type of relationship between the two organizations.  For example: if the relationship `(Faith Comes By Hearing)` is a member of the `(Forum of Bible Agencies International)`. This field would be `member`"
          },
          "relationship_id": {
            "type": "string",
            "description": "If the child organization has some sort of identifier as a part of the relationship that is stored here. For example: in the Digital Bible Library each member organization is identifed by a UUID. Those matching IDs would be stored here.",
            "example": "84985-3134158-2123"
          }
        }
      },
      "database_organization_translations": {
        "description": "This table stores the different titles and descriptions for the organizations catalogued by the Digital Bible Platform.",
        "properties": {
          "language_iso": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "organization_id": {
            "type": "integer",
            "minimum": 1,
            "description": "The Foreign ID of the organization currently being described."
          },
          "vernacular": {
            "type": "boolean",
            "description": "If true, this field determines whether or not the current name and description are the preferred/autonym name and description of the organization. For example: The Bible Society of Hong Kong may only have the vernacular field set to true when the translation is in Chinese."
          },
          "alt": {
            "type": "boolean",
            "description": "This field indicates that it is an alternative name for the same organization."
          },
          "name": {
            "type": "string",
            "description": "This field stores the translated name of the organization"
          },
          "description": {
            "type": "string",
            "description": "This field stores the translated description of the organization"
          },
          "description_short": {
            "type": "string",
            "description": "This field stores the translated shortened description of the organization"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_organizations": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 1,
            "description": "The incrementing value"
          },
          "slug": {
            "type": "string",
            "description": "Simple URL safe string to display for linking.",
            "example": "the-digital-bible-society"
          },
          "abbreviation": {
            "type": "string",
            "description": "The abbreviation of the organization.",
            "example": "DBS"
          },
          "notes": {
            "type": "string",
            "description": "Archivist notes"
          },
          "primaryColor": {
            "type": "string",
            "description": "The primary color for the organization",
            "example": "#4488bb"
          },
          "secondaryColor": {
            "type": "string",
            "description": "The secondary color for the organization",
            "example": "#888888"
          },
          "inactive": {
            "type": "boolean",
            "description": "If true, this organization is not currently active or multiple attempts have been made to contact them and they've been unresponsive."
          },
          "url_facebook": {
            "type": "string",
            "description": "The facebook page for the organization being described."
          },
          "url_website": {
            "type": "string",
            "description": "The webpage for the organization being described."
          },
          "url_donate": {
            "type": "string",
            "description": "The webpage to donate to the organization being described."
          },
          "url_twitter": {
            "type": "string",
            "description": "The twitter page for the organization being described."
          },
          "address": {
            "type": "string",
            "description": "The physical street address of the organization"
          },
          "address2": {
            "type": "string",
            "description": "The second line address of the organization"
          },
          "city": {
            "type": "string",
            "description": "The city of the address"
          },
          "state": {
            "type": "string",
            "description": "The state of the address"
          },
          "country": {
            "type": "string",
            "description": "The country/nation of the address"
          },
          "zip": {
            "type": "string",
            "description": "The postal/zip code of the address"
          },
          "phone": {
            "type": "string",
            "description": "The organization's phone number"
          },
          "email": {
            "type": "string",
            "description": "The organization's email address"
          }
        }
      },
      "database_projects": {
        "description": "The projects table describes User created projects that utilize the API. For example: The Gideon's app may be a specific project.",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "description": "The name of the project"
          },
          "url_avatar": {
            "type": "string",
            "description": "The filename of the logo for the project"
          },
          "url_avatar_icon": {
            "type": "string",
            "description": "The filename of the icon version of the logo for the project"
          },
          "url_site": {
            "type": "string",
            "description": "The project's homepage"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the project"
          }
        }
      },
      "database_project_members": {
        "description": "This table details the membership of a specific project by explaining the connection between the projects and the users table. It's a pivot table - that's what pivot tables do.",
        "required": [
          "user_id",
          "project_id",
          "role"
        ],
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The ID of the user being described"
          },
          "project_id": {
            "type": "string",
            "description": "The ID of the project being described"
          },
          "role": {
            "type": "string",
            "description": "The role the user has in the project"
          }
        }
      },
      "database_resource_links": {
        "description": "This table handles the links for resources. Since resources are an abstract holding container this is kept as generic as possible.",
        "properties": {
          "resource_id": {
            "type": "integer",
            "description": "The foreign identifier for the resources `id`",
            "example": "14"
          },
          "title": {
            "type": "string",
            "description": "The Title of the url"
          },
          "size": {
            "type": "string",
            "description": "If the link is pointed to a file. This field describes the size of the download.",
            "example": "14Mib"
          },
          "type": {
            "type": "string",
            "description": "A generic description of the destination file",
            "example": "PDF"
          },
          "url": {
            "type": "string",
            "description": "The url to the destination file.",
            "example": "https://dbs.org/resources/bible_file.pdf"
          }
        }
      },
      "database_resource_translations": {
        "properties": {
          "iso": {
            "$ref": "#/components/schemas/iso_code"
          },
          "resource_id": {
            "type": "integer",
            "description": "The foreign identifier for the resources `id`",
            "example": 14
          },
          "vernacular": {
            "type": "boolean",
            "description": "If true, the translation being described is the primary translation for the resource",
            "example": 1
          },
          "tag": {
            "type": "boolean",
            "description": "If true the translation being described is not a title for the resource but rather a tag. If combined with the `vernacular` field these indicate the primary tags."
          },
          "title": {
            "type": "string",
            "description": "The title or tag for the resource.",
            "example": "The King James Version"
          },
          "description": {
            "type": "string",
            "description": "The description of the resource or additional data for a tag."
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_resources": {
        "required": [
          "iso",
          "organization_id",
          "type"
        ],
        "properties": {
          "iso": {
            "$ref": "#/components/schemas/iso_code"
          },
          "organization_id": {
            "$ref": "#/components/schemas/field_incrementing_organization_id"
          },
          "source_id": {
            "type": "string",
            "description": "If the source organization has an identifier for this resource that needs to be stored."
          },
          "cover": {
            "type": "string",
            "description": "The URL to the cover image for the resource"
          },
          "cover_thumbnail": {
            "type": "string",
            "description": "The URL to the cover thumbnail image for the resource"
          },
          "date": {
            "type": "integer",
            "description": "The date that the resource was originally published.",
            "example": 1984
          },
          "type": {
            "type": "string",
            "description": "The general catagory that encompasses the resource.",
            "example": "Commentary"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_translator_relations": {
        "description": "This describes the relationships between translators and other translators or organizations.",
        "properties": {
          "translator_id": {
            "type": "string",
            "description": "The Translator ID that is being described.",
            "example": "bartholomaus-ziegenbalg"
          },
          "translator_relation_id": {
            "type": "string",
            "description": "The Translator ID that is the target of the relationship.",
            "example": "victor-danielsen"
          },
          "organization_id": {
            "type": "integer",
            "description": "The organization ID that defines the translator",
            "example": 21
          },
          "type": {
            "type": "string",
            "description": "The type of relationship"
          },
          "description": {
            "type": "string",
            "description": "The description of the relationship"
          },
          "notes": {
            "type": "string",
            "description": "Archivist notes regarding the translator relationship. Will not return to the end user."
          }
        }
      },
      "database_translators": {
        "description": "The table that describes the Translators",
        "properties": {
          "id": {
            "type": "string",
            "description": "The sluggify string for the translator name",
            "example": "hans-paludan-smith-schreuder"
          },
          "name": {
            "type": "string",
            "description": "The translator's name",
            "example": "Hans Paludan Smith Schreuder"
          },
          "born": {
            "type": "integer",
            "description": "The year of the translator's birth",
            "example": 1817
          },
          "died": {
            "type": "integer",
            "description": "The year of the translator's death",
            "example": 1882
          },
          "description": {
            "type": "string",
            "description": "The story of the translator's life."
          }
        }
      },
      "database_user_access": {
        "description": "Access gateway to the filesets for users or organizations.",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The User whose access is being described",
            "example": "TC5zYjlGRAnMemPu"
          },
          "key_id": {
            "type": "string",
            "description": "The key whose access is being described"
          },
          "bible_id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "hash_id": {
            "type": "string",
            "description": "The hash id for a particular fileset"
          },
          "organization_id": {
            "type": "integer",
            "description": "The organization ID that the user is connected to.",
            "example": 21
          },
          "access_notes": {
            "type": "string",
            "description": "Notes about the connection."
          },
          "access_type": {
            "type": "string",
            "description": "The type of access granted"
          },
          "access_granted": {
            "type": "boolean",
            "description": "If true, access has been granted. If false, access has been denied"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_user_accounts": {
        "description": "This table details the connection between users and their socialite connected oAuth providers. If a user wishes to login with multiple seperate accounts (Their facebook and their google account) this table also makes that connection possible without the duplication of user accounts.",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The User whose account is being described",
            "example": "TC5zYjlGRAnMemPu"
          },
          "provider": {
            "type": "string",
            "description": "The oAuth account provider"
          },
          "provider_user_id": {
            "type": "string",
            "description": "The foreign oAuth account provider's user id."
          }
        }
      },
      "database_user_notes": {
        "description": "This table stores the encrypted user notes",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "user_id": {
            "type": "string",
            "description": "The user whose notes are being described."
          },
          "bible_id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "book_id": {
            "$ref": "#/components/schemas/book_id_usfm"
          },
          "chapter": {
            "$ref": "#/components/schemas/chapter"
          },
          "verse_start": {
            "$ref": "#/components/schemas/verse_start"
          },
          "verse_end": {
            "$ref": "#/components/schemas/verse_end"
          },
          "project_id": {
            "type": "string",
            "description": "The ID for the project"
          },
          "notes": {
            "type": "string",
            "description": "The encrypted user notes"
          },
          "bookmark": {
            "type": "boolean",
            "description": "If true this `note` is simply a bookmark"
          },
          "created_at": {
            "$ref": "#/components/schemas/field_created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/field_updated_at"
          }
        }
      },
      "database_user_keys": {
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "database_user_note_tags": {
        "properties": {
          "id": {
            "type": "string"
          },
          "note_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "database_user_highlights": {
        "description": "This table describes the highlights for the users.",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/field_incrementing_id"
          },
          "user_id": {
            "type": "string",
            "description": "The ID of the user whose highlights are being described."
          },
          "bible_id": {
            "$ref": "#/components/schemas/bible_id"
          },
          "book_id": {
            "$ref": "#/components/schemas/book_id_usfm"
          },
          "chapter": {
            "$ref": "#/components/schemas/chapter"
          },
          "verse_start": {
            "$ref": "#/components/schemas/verse_start"
          },
          "project_id": {
            "type": "string",
            "description": "The project that the user note is attached to"
          },
          "highlight_start": {
            "type": "string",
            "description": "The word that starts the highlighting sequence"
          },
          "highlighted_words": {
            "type": "string",
            "description": "The number of words being highlighted"
          },
          "highlighted_color": {
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "example": "48B",
            "description": "The three letter hex color for the highlight"
          }
        }
      },
      "database_user_roles": {
        "description": "User Roles",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          }
        }
      },
      "database_users": {
        "description": "The table that describes the users.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID for the user",
            "maxLength": 64
          },
          "name": {
            "type": "string",
            "description": "The name of the user"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "The password for the user"
          },
          "nickname": {
            "type": "string",
            "description": "The nickname/preferred name for the user"
          },
          "avatar": {
            "type": "string",
            "description": "The user profile picture"
          },
          "email": {
            "type": "string",
            "description": "The user email"
          }
        }
      },
      "field_incrementing_id": {
        "type": "integer",
        "description": "Auto incrementing integer field to serve as an arbitrary ID",
        "readOnly": true,
        "minimum": 1,
        "example": 25
      },
      "field_incrementing_language_id": {
        "type": "integer",
        "description": "Auto incrementing integer field to serve as an ID for the Languages",
        "readOnly": true,
        "minimum": 1,
        "example": 25
      },
      "field_incrementing_organization_id": {
        "type": "integer",
        "description": "Auto incrementing integer field to serve as an ID for the organizations",
        "readOnly": true,
        "minimum": 1,
        "example": 25
      },
      "field_script_id": {
        "type": "string",
        "description": "This is the script code taken from the ISO 15924 Registration Authority For a complete list of codes you can visit the unicode site at http://www.unicode.org/iso15924/iso15924-codes.html",
        "minLength": 4,
        "maxLength": 4,
        "example": "Adlm"
      },
      "field_fileset_hash_id": {
        "type": "string",
        "description": "The first 12 characters of a MD5 hash of the concatenated id,bucket_id,set_type_code,set_size_code fields.",
        "example": "89407fd3655e"
      },
      "field_size_code": {
        "type": "string",
        "description": "A code communicating the size of the scripture resource.\n* __C:__ Complete\n* __NT:__  New Testament\n* __NTOTP:__ New Testament, Old Testament Portion\n* __NTP:__ New Testament Portion\n* __NTPOTP:__  new Testament Portion, Old Testament Portion\n* __OT:__  Old Testament\n* __OTNTP:__ Old Testament, New Testament Portion\n* __OTP:__ Old Testament Portion\n* __P:__ Portion\n* __S:__ Stories\n",
        "enum": [
          "C",
          "NT",
          "NTOTP",
          "NTP",
          "NTPOTP",
          "OT",
          "OTNTP",
          "OTP",
          "P",
          "S"
        ]
      },
      "field_created_at": {
        "type": "string",
        "description": "The time this was originally created",
        "format": "date-time",
        "readOnly": true,
        "example": "2018-02-12 13:34:47"
      },
      "field_updated_at": {
        "type": "string",
        "description": "The time this resource was last updated",
        "format": "date-time",
        "readOnly": true,
        "example": "2018-02-12 13:34:47"
      },
      "bible_id": {
        "example": "BAON10",
        "type": "string",
        "minLength": 6,
        "maxLength": 12,
        "description": "The unique identifier for the Bible."
      },
      "book_id_usfm": {
        "example": "TIT",
        "description": "The 3 letter USFM 2.4 book identifier, for a complete list view the USFM 2.4 documentation at http://paratext.org/about/usfm#usfmDocumentation",
        "type": "string",
        "minLength": 3,
        "maxLength": 3,
        "enum": [
          "GEN",
          "EXO",
          "LEV",
          "NUM",
          "DEU",
          "JOS",
          "JDG",
          "RUT",
          "1SA",
          "2SA",
          "1KI",
          "2KI",
          "1CH",
          "2CH",
          "EZR",
          "NEH",
          "EST",
          "JOB",
          "PSA",
          "PRO",
          "ECC",
          "SNG",
          "ISA",
          "JER",
          "LAM",
          "EZK",
          "DAN",
          "HOS",
          "JOL",
          "AMO",
          "OBA",
          "JON",
          "MIC",
          "NAM",
          "HAB",
          "ZEP",
          "HAG",
          "ZEC",
          "MAL",
          "MAT",
          "MRK",
          "LUK",
          "JHN",
          "ACT",
          "ROM",
          "1CO",
          "2CO",
          "GAL",
          "EPH",
          "PHP",
          "COL",
          "1TH",
          "2TH",
          "1TI",
          "2TI",
          "TIT",
          "PHM",
          "HEB",
          "JAS",
          "1PE",
          "2PE",
          "1JN",
          "2JN",
          "3JN",
          "JUD",
          "REV",
          "TOB",
          "JDT",
          "ESG",
          "WIS",
          "SIR",
          "BAR",
          "LJE",
          "S3Y",
          "SUS",
          "BEL",
          "1MA",
          "2MA",
          "3MA",
          "4MA",
          "1ES",
          "2ES",
          "MAN",
          "PS2",
          "ODA",
          "PSS",
          "EZA",
          "5EZ",
          "6EZ",
          "DAG",
          "PS3",
          "2BA",
          "LBA",
          "JUB",
          "ENO",
          "1MQ",
          "2MQ",
          "3MQ",
          "REP",
          "4BA",
          "LAO"
        ]
      },
      "book_id_usfx": {
        "type": "string",
        "description": "The two letter book ID matching up to the USFX standard originally created by KMJ.",
        "minimum": 2,
        "maximum": 2,
        "example": "MT",
        "enum": [
          "GN",
          "EX",
          "LV",
          "NU",
          "DT",
          "JS",
          "JG",
          "RT",
          "S1",
          "S2",
          "K1",
          "K2",
          "R1",
          "R2",
          "ER",
          "NH",
          "ET",
          "JB",
          "PS",
          "PR",
          "EC",
          "SS",
          "IS",
          "JR",
          "LM",
          "EK",
          "DN",
          "HS",
          "JL",
          "AM",
          "OB",
          "JH",
          "MC",
          "NM",
          "HK",
          "ZP",
          "HG",
          "ZC",
          "ML",
          "MT",
          "MK",
          "LK",
          "JN",
          "AC",
          "RM",
          "C1",
          "C2",
          "GL",
          "EP",
          "PP",
          "CL",
          "H1",
          "H2",
          "T1",
          "T2",
          "TT",
          "PM",
          "HB",
          "JM",
          "P1",
          "P2",
          "J1",
          "J2",
          "J3",
          "JD",
          "RV",
          "TB",
          "JT",
          "EG",
          "WS",
          "SR",
          "BR",
          "PA",
          "SN",
          "BL",
          "M1",
          "M2",
          "M3",
          "M4",
          "E1",
          "E2",
          "PN",
          "PX",
          "OD",
          "SP",
          "EA",
          "E5",
          "E6",
          "DG",
          "P3",
          "2B",
          "LB",
          "JU",
          "EO",
          "Q1",
          "Q2",
          "Q3",
          "RP",
          "B4",
          "LO"
        ]
      },
      "book_id_osis": {
        "type": "string",
        "description": "The Osis book IDs matching up to OSIS 2.1.1 standard. To view all available codes see the documentation here: https://www.crosswire.org/osis/OSIS%202.1.1%20User%20Manual%2006March2006.pdf",
        "example": "Matt",
        "minimum": 3,
        "maximum": 12,
        "enum": [
          "Gen",
          "Exod",
          "Lev",
          "Num",
          "Deut",
          "Josh",
          "Judg",
          "Ruth",
          "1Sam",
          "2Sam",
          "1Kgs",
          "2Kgs",
          "1Chr",
          "2Chr",
          "Ezra",
          "Neh",
          "Esth",
          "Job",
          "Ps",
          "Prov",
          "Eccl",
          "Song",
          "Isa",
          "Jer",
          "Lam",
          "Ezek",
          "Dan",
          "Hos",
          "Joel",
          "Amos",
          "Obad",
          "Jonah",
          "Mic",
          "Nah",
          "Hab",
          "Zeph",
          "Hag",
          "Zech",
          "Mal",
          "Matt",
          "Mark",
          "Luke",
          "John",
          "Acts",
          "Rom",
          "1Cor",
          "2Cor",
          "Gal",
          "Eph",
          "Phil",
          "Col",
          "1Thess",
          "2Thess",
          "1Tim",
          "2Tim",
          "Titus",
          "Phlm",
          "Heb",
          "Jas",
          "1Pet",
          "2Pet",
          "1John",
          "2John",
          "3John",
          "Jude",
          "Rev",
          "Tob",
          "Jdt",
          "EsthGr",
          "wis",
          "Sir",
          "Bar",
          "EpJer",
          "PrAzar",
          "Sus",
          "Bel",
          "1Macc",
          "2Macc",
          "3Macc",
          "4Macc",
          "1Esd",
          "2Esd",
          "PrMan",
          "AddPs",
          "Odes",
          "PssSol",
          "4Ezra",
          "5Ezra",
          "6Ezra",
          "DanGr",
          "5ApocSyrPss",
          "2Bar",
          "EpBar",
          "Jub",
          "1En",
          "1Meq",
          "2Meq",
          "3Meq",
          "Rep",
          "4Bar",
          "EpLao"
        ]
      },
      "chapter": {
        "type": "integer",
        "description": "The integer value for the chapter of the reference. For example: the reference `1 John 2:3-5` would be `2`. Unlike the verse_start and verse_end values there is only one chapter value as references do not span chapters.",
        "example": 2,
        "minimum": 1,
        "maximum": 150
      },
      "date": {
        "type": "integer",
        "description": "The integer value of the year that the Bible was originally published.",
        "example": 1991,
        "minimum": 330,
        "maximum": 2018
      },
      "iso_code": {
        "type": "string",
        "example": "eng",
        "minimum": 3,
        "maximum": 3,
        "description": "The three letter Iso 639-3 code"
      },
      "verse_start": {
        "type": "integer",
        "description": "The integer value for the starting verse in the reference selection. For the reference `1 John 2:3-5`. The starting verse would be `3`",
        "example": 3,
        "minimum": 1,
        "maximum": 176
      },
      "verse_end": {
        "type": "integer",
        "description": "The integer value for the ending verse in the reference selection. For the reference `1 John 2:3-5`. The ending verse would be `5`",
        "example": 5,
        "minimum": 1,
        "maximum": 176,
        "nullable": true
      }
    },
    "parameters": {
      "key": {
        "name": "key",
        "in": "query",
        "description": "The API key that's been generated for you.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "pretty": {
        "name": "pretty",
        "in": "query",
        "description": "A sugar param, simply will format the call for human eyes",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "version": {
        "name": "version",
        "in": "query",
        "description": "The version of the API to query. (For everything in these docs it'd be set to 4)",
        "required": true,
        "schema": {
          "type": "integer",
          "example": 4
        }
      },
      "reply": {
        "name": "reply",
        "in": "query",
        "description": "Specifies the response type requested by the caller. Default is json.",
        "schema": {
          "type": "string",
          "enum": [
            "json",
            "html",
            "jsonp",
            "yaml",
            "xml"
          ]
        }
      },
      "callback": {
        "name": "callback",
        "in": "query",
        "description": "If unused the results are as before. If set to true, the results will be prepended with the array of calling arguments used. This does mean that the results will be one layer deeper as the results will be an array where the first element is the array of input arguments and the second element will be the results as normally returned.",
        "schema": {
          "type": "string"
        }
      },
      "dam_id": {
        "name": "dam_id",
        "in": "query",
        "description": "To get the location directory and asset file basename for a specific volume.",
        "schema": {
          "type": "string"
        }
      },
      "bible_id_path": {
        "name": "bible_id",
        "in": "path",
        "description": "The ID of the bible.",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 6,
          "maxLength": 12,
          "example": "ENGKJV"
        }
      },
      "fileset_id": {
        "name": "fileset_id",
        "in": "query",
        "description": "The id of the fileset",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "fileset_id_path": {
        "name": "fileset_id",
        "in": "path",
        "description": "The id of the fileset",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "chapter_id": {
        "name": "chapter_id",
        "in": "query",
        "description": "The number of the chapter you wish to query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 150,
          "example": 1
        }
      },
      "chapter_id_path": {
        "name": "chapter_id",
        "in": "path",
        "description": "The number of the chapter",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 150,
          "example": 1
        }
      },
      "book_id": {
        "name": "book_id",
        "in": "query",
        "description": "The corresponding USFM 2.4 ID for the book you wish to query",
        "schema": {
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "example": "GEN"
        }
      },
      "book_id_path": {
        "name": "book_id",
        "in": "path",
        "description": "The corresponding USFM 2.4 ID for the book in the path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "example": "GEN"
        }
      },
      "book_ids": {
        "name": "book_ids",
        "in": "query",
        "description": "The corresponding USFM 2.4 IDs for the books you wish to query",
        "schema": {
          "type": "array"
        }
      },
      "bucket": {
        "name": "bucket",
        "in": "query",
        "description": "The name of the bucket from which you wish to query content.",
        "schema": {
          "type": "string"
        }
      },
      "lifespan": {
        "name": "lifespan",
        "in": "query",
        "description": "The number of minutes that the link will be good for.",
        "schema": {
          "type": "string"
        }
      },
      "driver_id": {
        "name": "driver",
        "in": "path",
        "description": "There are currently four different providers that are availalble for use via the API. google, facebook, reddit, & github",
        "required": true,
        "schema": {
          "type": "string",
          "example": "google",
          "enum": [
            "google",
            "facebook",
            "reddit",
            "github"
          ]
        }
      }
    }
  }
}